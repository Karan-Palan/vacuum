{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://quobix.com/vacuum/schemas/rule.schema.json",
  "type": "object",
  "required": [ "given", "then" ],
  "properties": {
    "id": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "type": {
      "enum": [ "style", "validation" ],
      "errorMessage": "allowed types are \"style\" and \"validation\""
    },
    "then": {
      "anyOf": [
        {
          "$ref": "#/$defs/Then"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Then"
          }
        }
      ]
    },
    "category": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "documentationUrl": {
      "type": "string",
      "format": "url",
      "errorMessage": "must be a valid URL"
    },
    "formats": {
      "$ref": "#/$defs/Formats"
    },
    "given": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "howToFix": {
      "type": "string"
    },
    "message": {
      "type": "string"
    },
    "recommended": {
      "type": "boolean"
    },
    "resolved": {
      "type": "boolean"
    },
    "severity": {
      "$ref": "#/$defs/Severity"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  },
  "additionalProperties": false,
  "$defs": {
    "DiagnosticSeverity": {
      "enum": [ -1, 0, 1, 2, 3 ]
    },
    "Format": {
      "$anchor": "format",
      "errorMessage": "must be a valid format",
      "spectral-runtime": "spectral-format"
    },
    "Formats": {
      "$anchor": "formats",
      "type": "array",
      "items": {
        "$ref": "#/$defs/Format"
      },
      "errorMessage": "must be an array of formats"
    },
    "Functions": {
      "$anchor": "functions",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "HumanReadableSeverity": {
      "enum": [ "error", "warn", "info", "hint", "off" ]
    },
    "Severity": {
      "$anchor": "severity",
      "oneOf": [
        {
          "$ref": "#/$defs/DiagnosticSeverity"
        },
        {
          "$ref": "#/$defs/HumanReadableSeverity"
        }
      ],
      "errorMessage": "the value has to be one of: 0, 1, 2, 3 or \"error\", \"warn\", \"info\", \"hint\", \"off\""
    },
    "Then": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "field": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": [ "function" ],
          "spectral-runtime": "ruleset-function"
        }
      ]
    }
  }
}
